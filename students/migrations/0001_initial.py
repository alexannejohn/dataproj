# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-05-23 21:16
from __future__ import unicode_literals

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('codetables', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('year_level', models.IntegerField(blank=True, null=True)),
                ('action_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppActionCode')),
                ('applicant_decision', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppDecision')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('multiple_action', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppMultipleAction')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('award_title', models.CharField(max_length=150)),
                ('award_number', models.IntegerField(blank=True, null=True)),
                ('award_amount', models.IntegerField(blank=True, null=True)),
                ('award_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AwardType')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Enroll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('year_level', models.IntegerField(blank=True, null=True)),
                ('sessional_average', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('program_entry_year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1111), django.core.validators.MaxValueValidator(3000)])),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Graduation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('grad_application_status', models.CharField(blank=True, max_length=10, null=True)),
                ('status_reason', models.CharField(blank=True, max_length=50, null=True)),
                ('transfer_credits', models.CharField(blank=True, max_length=40, null=True)),
                ('ceremony_date', models.DateField(blank=True, null=True)),
                ('conferral_period', models.DateField(blank=True, null=True)),
                ('attending', models.BooleanField(default=False)),
                ('doctoral_citation', models.CharField(blank=True, max_length=20, null=True)),
                ('dual_degree', models.BooleanField(default=False)),
                ('program_version', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('program', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('program_type', models.CharField(blank=True, max_length=20, null=True)),
                ('level', models.CharField(blank=True, max_length=20, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('session', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('year', models.IntegerField(validators=[django.core.validators.MinValueValidator(1111), django.core.validators.MaxValueValidator(3000)])),
                ('code', models.CharField(max_length=1)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SpecEnrolled',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('enroll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Enroll')),
            ],
        ),
        migrations.CreateModel(
            name='SpecGrad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField(default=1)),
                ('graduation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Graduation')),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('code', models.IntegerField(primary_key=True, serialize=False)),
                ('primary_type', models.CharField(blank=True, max_length=5, null=True)),
                ('secondary_type', models.CharField(blank=True, max_length=5, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('student_number', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(11111111), django.core.validators.MaxValueValidator(99999999)])),
                ('given_name', models.CharField(max_length=100)),
                ('surname', models.CharField(blank=True, max_length=100, null=True)),
                ('email_address', models.CharField(blank=True, max_length=100, null=True)),
                ('preferred_name', models.CharField(blank=True, max_length=100, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('birthdate', models.DateField(blank=True, null=True)),
                ('sub_type', models.CharField(blank=True, choices=[('NATI', 'First Nations'), ('INUI', 'Inuit'), ('METI', 'MÃ©tis')], max_length=4, null=True)),
                ('province', models.CharField(blank=True, choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('YT', 'Yukon')], max_length=2, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('first_session_admitted', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_admitted', to='students.Session')),
                ('first_session_applied', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_applied', to='students.Session')),
                ('first_session_registered', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='s_reg', to='students.Session')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('subject_code', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='specialization',
            name='primary_subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specializations_pri', to='students.Subject'),
        ),
        migrations.AddField(
            model_name='specialization',
            name='program',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Program'),
        ),
        migrations.AddField(
            model_name='specialization',
            name='secondary_subject',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='specializations_sec', to='students.Subject'),
        ),
        migrations.AddField(
            model_name='specgrad',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Specialization'),
        ),
        migrations.AddField(
            model_name='specenrolled',
            name='specialization',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Specialization'),
        ),
        migrations.AddField(
            model_name='graduation',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.Program'),
        ),
        migrations.AddField(
            model_name='graduation',
            name='specializations',
            field=models.ManyToManyField(blank=True, null=True, through='students.SpecGrad', to='students.Specialization'),
        ),
        migrations.AddField(
            model_name='graduation',
            name='student_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.Program'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='regi_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.RegistrationStatus'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Session'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='sessional_standing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.SessionalStanding'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='specializations',
            field=models.ManyToManyField(blank=True, null=True, through='students.SpecEnrolled', to='students.Specialization'),
        ),
        migrations.AddField(
            model_name='enroll',
            name='student_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
        migrations.AddField(
            model_name='award',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Session'),
        ),
        migrations.AddField(
            model_name='award',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AwardStatus'),
        ),
        migrations.AddField(
            model_name='award',
            name='student_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
        migrations.AddField(
            model_name='application',
            name='program',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='students.Program'),
        ),
        migrations.AddField(
            model_name='application',
            name='re_admission',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppReAdmission'),
        ),
        migrations.AddField(
            model_name='application',
            name='reason',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppReason'),
        ),
        migrations.AddField(
            model_name='application',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Session'),
        ),
        migrations.AddField(
            model_name='application',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='codetables.AppStatus'),
        ),
        migrations.AddField(
            model_name='application',
            name='student_number',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.Student'),
        ),
        migrations.AlterUniqueTogether(
            name='specgrad',
            unique_together=set([('graduation', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='specenrolled',
            unique_together=set([('enroll', 'order')]),
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together=set([('year', 'code')]),
        ),
        migrations.AlterUniqueTogether(
            name='enroll',
            unique_together=set([('student_number', 'session')]),
        ),
    ]
